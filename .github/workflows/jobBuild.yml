name: Build Application

on:
  push:
    branches:
      - main # Déclencher l'action lorsque tu pousses sur main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Configuration de Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Installation des dépendances
        run: npm ci

      - name: Build du projet
        run: |
          echo "Building the project..."
          npm run build

  test:
    needs: build # Cette ligne indique que le job test dépend du job build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Configuration de Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Installation des dépendances
        run: npm ci

      - name: Test de l'application
        run: |
          echo "Testing the application..."
          npm run e2e:headless

      - name: Upload des vidéos de test
        if: always() # Exécute cette étape même si les tests échouent
        uses: actions/upload-artifact@v4
        with:
          name: test-videos
          path: cypress/videos/
          retention-days: 1 # Conserve les vidéos pendant 7 jours

  deploy:
    needs: test # Cette ligne indique que le job deploy dépend du job test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Connexion à l'hôte distant en SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - name: Déploiement de l'application
        run: |
          echo "Connexion SSH au serveur distant..."
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd next-cda241
            echo "Mise à jour du dépôt..."
            git pull origin main
            echo "Installation de Node.js..."
            sudo apt-get update
            sudo apt-get install -y nodejs npm
            echo "Installation de PM2..."
            sudo npm install -g pm2
            echo "Installation des dépendances..."
            npm ci
            echo "Reconstruction du projet..."
            npm run build
            echo "Redémarrage de l'application..."
            pm2 start 
          EOF
